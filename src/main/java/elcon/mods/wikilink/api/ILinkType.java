package elcon.mods.wikilink.api;

import java.util.List;

import javax.swing.text.html.HTMLDocument;

public interface ILinkType {

	/**
	 * @return Name for this link type, without spaces (example: MinecraftWiki)
	 */
	public String getName();
	
	/**
	 * @return Display name for this link type, usually translated into the current language (example: Minecraft Wiki)
	 */
	public String getDisplayName();
	
	/**
	 * @param topic The topic
	 * @return Returns the name of this topic
	 */
	public String getTopicName(Object topic);
	
	/**
	 * @return List of accepted topics (example: [ItemStack.class, Entity.class])
	 */
	public List<Class<?>> getTopics();
	
	/**
	 * @return Whether this link type is search only? (example: Google: true, MinecraftWiki: false)
	 */
	public boolean isSearchOnly();
	
	/**
	 * Generate a search link for a topic
	 * 
	 * @param topic The object to generate a search link for (example: ItemStack)
	 * @return The URL generated by this link type for the topic (example: http://google.com/search?q=test)
	 */
	public ILink generateSearchLink(Object topic);
	
	/**
	 * Generate a link for a topic
	 * 
	 * @param topic The object to generate a link for (example: ItemStack)
	 * @return The URL generated by this link type for the topic or null if the topic doesn't exist (example: http://google.com/search?q=test)
	 */
	public ILink generateLink(Object topic);
	
	/**
	 * @return Whether this link type supports previews
	 */
	public boolean hasPreview();
	
	/**
	 * Generate the title of preview for a link of this type
	 * 
	 * @param link The link
	 * @param html The HTML document
	 * @return The title for the preview of the link
	 */
	public String getPreviewTitle(ILink link, HTMLDocument html);
	
	/**
	 * Generate a preview text for a link of this type
	 * 
	 * @param link The link
	 * @param html The HTML document
	 * @return The preview text of the link
	 */
	public String getPreview(ILink link, HTMLDocument html);
}
